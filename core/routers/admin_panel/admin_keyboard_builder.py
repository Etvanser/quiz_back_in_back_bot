from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from core.database_manager.db_users_handler import UserRole
from core.locale.locale import Locale


class AdminKeyboardBuilder:
    """
    –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    """

    def __init__(self):
        self.locale = Locale()

    @property
    def admin_main_menu(self) -> InlineKeyboardMarkup:
        """
        –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ - –ü–ï–†–í–´–ô –£–†–û–í–ï–ù–¨
        """
        keyboard = InlineKeyboardBuilder()
        buttons = [
            (self.locale.buttons.get("btn_manage_users"), "manage_users_cmd"),
            (self.locale.buttons.get("btn_manage_players"), "manage_players_cmd"),
            (self.locale.buttons.get("btn_close"), "cancel_operation")
        ]

        for text, callback_data in buttons:
            keyboard.button(text=text, callback_data=callback_data)

        keyboard.adjust(1)
        return keyboard.as_markup()

    @property
    def admin_users_management_menu(self) -> InlineKeyboardMarkup:
        """
        –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
        """
        keyboard = InlineKeyboardBuilder()
        buttons = [
            (self.locale.buttons.get("btn_add_user"), "add_user_cmd"),
            (self.locale.buttons.get("btn_list_users"), "users_list_cmd"),
            (self.locale.buttons.get("btn_delete_user"), "delete_users_cmd"),
            (self.locale.buttons.get("btn_close"), "cancel_operation")
        ]

        for text, callback_data in buttons:
            keyboard.button(text=text, callback_data=callback_data)

        keyboard.adjust(1)
        return keyboard.as_markup()

    @property
    def admin_players_management_menu(self) -> InlineKeyboardMarkup:
        """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞–º–∏
        """
        buttons = [
            [InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞", callback_data="add_player_cmd")],
            [InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤", callback_data="players_list_cmd")],
            [InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∏–≥—Ä–æ–∫–∞", callback_data="delete_players_cmd")],
            [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_admin")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)

    @property
    def back_to_players_management_keyboard(self) -> InlineKeyboardMarkup:
        """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞–º–∏
        """
        buttons = [
            [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏–≥—Ä–æ–∫–∞–º–∏", callback_data="manage_players_cmd")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)

    @property
    def role_selection_keyboard(self) -> InlineKeyboardMarkup:
        """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏
        """
        keyboard = InlineKeyboardBuilder()
        keyboard.button(text=self.locale.buttons.get("btn_role_user"), callback_data="role_user")
        keyboard.button(text=self.locale.buttons.get("btn_role_admin"), callback_data="role_admin")
        keyboard.button(text=self.locale.buttons.get("btn_back"), callback_data="add_user_cmd")
        keyboard.button(text=self.locale.buttons.get("btn_cancel"), callback_data="cancel_operation")
        keyboard.adjust(2, 1, 1)
        return keyboard.as_markup()

    # def create_user_list_keyboard(self, users: list[dict]) -> InlineKeyboardMarkup:
    #     """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    #     # ... —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è

    def create_confirmation_delete_user_keyboard(self, user_id: int) -> InlineKeyboardMarkup:
        """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        keyboard = InlineKeyboardBuilder()

        buttons = [
            (self.locale.buttons.get("btn_yes_delete"), f"confirm_delete_{user_id}"),
            (self.locale.buttons.get("btn_cancel"), f"cancel_delete_{user_id}")
        ]

        for text, callback_data in buttons:
            keyboard.button(text=text, callback_data=callback_data)

        keyboard.adjust(2)
        return keyboard.as_markup()

    def create_single_button(self, text: str, callback_data: str) -> InlineKeyboardMarkup:
        """
        –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
        """
        keyboard = InlineKeyboardBuilder()
        keyboard.button(text=text, callback_data=callback_data)
        keyboard.adjust(1)
        return keyboard.as_markup()

    def create_delete_user_list_keyboard(self, users: list[dict]) -> InlineKeyboardMarkup:
        """
        –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        """
        keyboard = InlineKeyboardBuilder()

        for user in users:
            if user.get("role") == UserRole.ADMIN:
                continue

            username = f"@{user['username']}" if user['username'] else "–±–µ–∑ username"
            keyboard.button(
                text=f"üóëÔ∏è {user['first_name']} {user['last_name']} ({username})",
                callback_data=f"delete_user_{user['user_id']}"
            )

        keyboard.button(text=self.locale.buttons.get("btn_back"), callback_data="back_to_admin")
        keyboard.adjust(1)
        return keyboard.as_markup()

    def players_list_keyboard(self, players: list) -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤"""
        buttons = []

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞
        for player in players:
            buttons.append([
                InlineKeyboardButton(
                    text=f"üóëÔ∏è {player.first_name} {player.last_name}",
                    callback_data=f"delete_player_{player.player_id}"
                )
            ])

        # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
        buttons.append([
            InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="manage_players_cmd")
        ])

        return InlineKeyboardMarkup(inline_keyboard=buttons)

    def players_delete_keyboard(self, players: list) -> InlineKeyboardMarkup:
        """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤
        """
        buttons = []

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞
        for player in players:
            buttons.append([
                InlineKeyboardButton(
                    text=f"üóëÔ∏è {player.first_name} {player.last_name}",
                    callback_data=f"delete_player_{player.player_id}"
                )
            ])

        # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
        buttons.append([
            InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="manage_players_cmd")
        ])

        return InlineKeyboardMarkup(inline_keyboard=buttons)

    def confirm_delete_user_keyboard(self, user_id: int) -> InlineKeyboardMarkup:
        buttons = [
            [
                InlineKeyboardButton(
                    text=self.locale.buttons.get("btn_confirm_delete"),
                    callback_data=f"confirm_delete_user_{user_id}"
                ),
                InlineKeyboardButton(
                    text=self.locale.buttons.get("btn_cancel"),
                    callback_data="cancel_delete_user"
                )
            ]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)

    def confirm_delete_player_keyboard(self, player_id: int) -> InlineKeyboardMarkup:
        buttons = [
            [
                InlineKeyboardButton(
                    text=self.locale.buttons.get("btn_confirm_delete"),
                    callback_data=f"confirm_delete_player_{player_id}"
                ),
                InlineKeyboardButton(
                    text=self.locale.buttons.get("btn_cancel"),
                    callback_data="cancel_delete_player"
                )
            ]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)

    @property
    def photo_upload_keyboard(self) -> InlineKeyboardMarkup:
        """
        –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ —Å –∫–Ω–æ–ø–∫–æ–π –ø—Ä–æ–ø—É—Å–∫–∞

        :return: InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏
        """
        buttons = [
            [InlineKeyboardButton(
                text=self.locale.buttons.get("btn_skip"),
                callback_data="skip_photo"
            )],
            [InlineKeyboardButton(
                text=self.locale.buttons.get("btn_cancel"),
                callback_data="cancel_operation"
            )]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)

    @property
    def nickname_skip_keyboard(self) -> InlineKeyboardMarkup:
        """
        –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∏–∫–∞ —Å –∫–Ω–æ–ø–∫–æ–π –ø—Ä–æ–ø—É—Å–∫–∞

        :return: InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏
        """
        buttons = [
            [InlineKeyboardButton(
                text=self.locale.buttons.get("btn_skip"),
                callback_data="skip_nickname"
            )],
            [InlineKeyboardButton(
                text=self.locale.buttons.get("btn_cancel"),
                callback_data="cancel_operation"
            )]
        ]
        return InlineKeyboardMarkup(inline_keyboard=buttons)
