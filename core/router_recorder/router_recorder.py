from aiogram import Router

from logger import Logger


logger = Logger().get_logger()


class RoutersRecorder:
    """
    –§–∞–±—Ä–∏–∫–∞ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤
    """
    _routers_factory = {}

    @classmethod
    def record_router(cls, router_class: type) -> type:
        """
        –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–ª–∞—Å—Å–æ–≤ –º–∞—Ä—à—Ä—É—Ç–æ–≤

        :param router_class: –ö–ª–∞—Å—Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
        """
        logger.info(f"–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–ª–∞—Å—Å: {router_class.__name__}")
        cls._routers_factory[router_class.__name__] = router_class
        return router_class

    @classmethod
    def get_routers(cls) -> dict[str, type]:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
        """
        return cls._routers_factory

    @classmethod
    def create_all_routers(cls) ->list[Router]:
        """
        –°–æ–∑–¥–∞–µ—Ç –≤—Å–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–æ—É—Ç–µ—Ä—ã
        """
        routers = []
        for name, router_class in cls._routers_factory.items():
            logger.info(f"üõ†Ô∏è –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä: {name}")
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä Router –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞
            router_instance = Router()
            # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ö–µ–Ω–¥–ª–µ—Ä—ã –≤ —ç—Ç–æ–º —Ä–æ—É—Ç–µ—Ä–µ
            router_class(router_instance)
            routers.append(router_instance)

        logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(routers)} —Ä–æ—É—Ç–µ—Ä–æ–≤")
        return routers

    @classmethod
    def setup_main_router(cls) -> Router:
        """
        –°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω—ã–π —Ä–æ—É—Ç–µ—Ä —Å–æ –≤—Å–µ–º–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ä–æ—É—Ç–µ—Ä–∞–º–∏
        """
        main_router = Router()
        for router in cls.create_all_routers():
            main_router.include_router(router)

        logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω –≥–ª–∞–≤–Ω—ã–π —Ä–æ—É—Ç–µ—Ä —Å {len(cls._routers_factory)} –¥–æ—á–µ—Ä–Ω–∏–º–∏ —Ä–æ—É—Ç–µ—Ä–∞–º–∏")
        return main_router
